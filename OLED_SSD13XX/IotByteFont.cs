// Path: IotByteFont.cs
// FromFamily: ph45
// Date: 2023-12-31 16:11:12
// This file is generated by IotByteFont.
// https://github.com/sangyuxiaowu/IotByteFont
// System.Collections package is required.

using Iot.Device.Ssd13xx;
using System;
using System.Collections;

namespace Iot.ByteFont
{
    /// <summary>
    /// 12x16 Font, generated by IotByteFont.
    /// </summary>
    public class IotByteFont : IFont
    {
        /// <summary>
        /// font data.
        /// </summary>
        public static readonly Hashtable _fontTable = new Hashtable()
        {
            {32, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, //  
            {26705, new byte[]{0xFC, 0xC3, 0x09, 0xF0, 0xC0, 0x30, 0xFE, 0x03, 0x25, 0x8C, 0x61, 0x24, 0x20, 0xE0, 0x3F, 0xB0, 0xC0, 0x32, 0x23, 0x04, 0x00, 0x00, 0x00, 0x00}}, // 桑
            {27014, new byte[]{0x84, 0x40, 0x14, 0x2E, 0x42, 0x5F, 0x04, 0xC0, 0x16, 0x0C, 0x41, 0x17, 0x15, 0x41, 0x16, 0x04, 0x41, 0x00, 0x64, 0x03, 0x00, 0x00, 0x00, 0x00}}, // 榆
            {32918, new byte[]{0x24, 0x82, 0x12, 0x20, 0xC0, 0x3F, 0x04, 0x42, 0x20, 0xFC, 0x43, 0x20, 0x04, 0xC2, 0x3F, 0x04, 0x42, 0x20, 0x84, 0x03, 0x00, 0x00, 0x00, 0x00}}, // 肖
            {29289, new byte[]{0x24, 0x40, 0x02, 0xEE, 0x43, 0x11, 0x54, 0x41, 0x14, 0x44, 0xC0, 0x02, 0x07, 0x40, 0x00, 0x44, 0x40, 0x06, 0x24, 0x03, 0x00, 0x00, 0x00, 0x00}}, // 物
            {33, new byte[]{0x00, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x00, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // !
            {34, new byte[]{0xB0, 0x00, 0x0A, 0xA0, 0x00, 0x0A, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // "
            {35, new byte[]{0x00, 0x00, 0x12, 0x10, 0x01, 0x11, 0xFE, 0x03, 0x09, 0x88, 0x80, 0x08, 0xFE, 0x83, 0x08, 0x44, 0x40, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // #
            {36, new byte[]{0x40, 0x00, 0x1F, 0x48, 0x80, 0x04, 0x48, 0x00, 0x07, 0xC0, 0x01, 0x14, 0x40, 0x02, 0x24, 0x40, 0x81, 0x0F, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00}}, // $
            {37, new byte[]{0x00, 0x80, 0x11, 0x04, 0x40, 0x02, 0x24, 0x40, 0x00, 0x58, 0x03, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // %
            {38, new byte[]{0x00, 0x00, 0x0F, 0x90, 0x80, 0x09, 0x90, 0x00, 0x07, 0x38, 0x44, 0x24, 0x84, 0x42, 0x38, 0x84, 0x83, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // &
            {39, new byte[]{0x60, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // '
            {40, new byte[]{0xC0, 0x00, 0x04, 0x20, 0x00, 0x02, 0x10, 0x00, 0x01, 0x10, 0x00, 0x01, 0x10, 0x00, 0x01, 0x10, 0x00, 0x02, 0x20, 0x00, 0x06, 0x40, 0x00, 0x00}}, // (
            {41, new byte[]{0x10, 0x00, 0x02, 0x20, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x20, 0x00, 0x02, 0x10, 0x00, 0x00}}, // )
            {42, new byte[]{0x40, 0x00, 0x15, 0xE8, 0x00, 0x06, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // *
            {43, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x80, 0x3F, 0x40, 0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // +
            {44, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x04, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00}}, // ,
            {45, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // -
            {46, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // .
            {47, new byte[]{0x80, 0x00, 0x08, 0x80, 0x00, 0x04, 0x40, 0x00, 0x04, 0x20, 0x00, 0x02, 0x20, 0x00, 0x01, 0x10, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // /
            {48, new byte[]{0x00, 0x00, 0x1F, 0x18, 0x83, 0x20, 0x08, 0x82, 0x20, 0x08, 0x82, 0x20, 0x08, 0x82, 0x20, 0x18, 0x01, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // 0
            {49, new byte[]{0x00, 0x00, 0x07, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // 1
            {50, new byte[]{0x00, 0x00, 0x1F, 0x00, 0x01, 0x10, 0x00, 0x01, 0x10, 0x00, 0x01, 0x08, 0x40, 0x00, 0x02, 0x18, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // 2
            {51, new byte[]{0x00, 0x00, 0x1F, 0x00, 0x01, 0x10, 0x00, 0x01, 0x18, 0xF0, 0x00, 0x10, 0x00, 0x02, 0x20, 0x00, 0x81, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // 3
            {52, new byte[]{0x00, 0x00, 0x18, 0x40, 0x01, 0x14, 0x20, 0x01, 0x11, 0x10, 0x81, 0x10, 0xF8, 0x03, 0x10, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // 4
            {53, new byte[]{0x00, 0x00, 0x1F, 0x10, 0x00, 0x01, 0x10, 0x80, 0x0F, 0x00, 0x01, 0x20, 0x00, 0x02, 0x20, 0x00, 0x81, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // 5
            {54, new byte[]{0x00, 0x00, 0x1C, 0x30, 0x00, 0x01, 0x08, 0x80, 0x1F, 0x08, 0x82, 0x20, 0x08, 0x82, 0x20, 0x18, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // 6
            {55, new byte[]{0x00, 0x80, 0x3F, 0x00, 0x02, 0x10, 0x00, 0x01, 0x08, 0x80, 0x00, 0x04, 0x40, 0x00, 0x02, 0x20, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // 7
            {56, new byte[]{0x00, 0x00, 0x1F, 0x08, 0x83, 0x20, 0x08, 0x02, 0x11, 0xF0, 0x81, 0x20, 0x08, 0x82, 0x20, 0x08, 0x02, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // 8
            {57, new byte[]{0x00, 0x00, 0x1F, 0x08, 0x83, 0x20, 0x08, 0x82, 0x20, 0x08, 0x03, 0x2F, 0x00, 0x03, 0x10, 0x80, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // 9
            {58, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // :
            {59, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x02, 0x20, 0x00, 0x01, 0x00, 0x00, 0x00}}, // ;
            {60, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x80, 0x03, 0x06, 0x18, 0x80, 0x00, 0x30, 0x00, 0x1C, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // <
            {61, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0xF8, 0x83, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // =
            {62, new byte[]{0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x18, 0x00, 0x0E, 0x00, 0x03, 0x20, 0xC0, 0x01, 0x03, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // >
            {63, new byte[]{0x00, 0x00, 0x1F, 0x00, 0x01, 0x10, 0x00, 0x01, 0x18, 0xC0, 0x00, 0x04, 0x20, 0x00, 0x00, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // ?
            {64, new byte[]{0x00, 0x00, 0x1F, 0x08, 0x42, 0x00, 0xE4, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x25, 0x20, 0x41, 0x00, 0x08, 0x01, 0x0E, 0x00, 0x00, 0x00}}, // @
            {65, new byte[]{0x00, 0x00, 0x06, 0x60, 0x00, 0x09, 0x90, 0x00, 0x11, 0x08, 0x81, 0x1F, 0x0C, 0x42, 0x20, 0x04, 0x22, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // A
            {66, new byte[]{0x00, 0xC0, 0x0F, 0x0C, 0xC1, 0x10, 0x0C, 0xC1, 0x18, 0xFC, 0xC0, 0x10, 0x0C, 0xC1, 0x10, 0x0C, 0xC1, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // B
            {67, new byte[]{0x00, 0x00, 0x3F, 0x18, 0x80, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x80, 0x00, 0x18, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // C
            {68, new byte[]{0x00, 0xC0, 0x1F, 0x0C, 0xC3, 0x20, 0x0C, 0xC6, 0x40, 0x0C, 0xC4, 0x40, 0x0C, 0xC6, 0x20, 0x0C, 0xC3, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // D
            {69, new byte[]{0x00, 0x80, 0x1F, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0xF8, 0x81, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // E
            {70, new byte[]{0x00, 0x80, 0x1F, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0xF8, 0x81, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // F
            {71, new byte[]{0x00, 0x00, 0x3F, 0x18, 0x80, 0x00, 0x04, 0x40, 0x00, 0x84, 0x47, 0x60, 0x04, 0x86, 0x60, 0x18, 0x06, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // G
            {72, new byte[]{0x00, 0x60, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0xFE, 0x63, 0x30, 0x06, 0x63, 0x30, 0x06, 0x63, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // H
            {73, new byte[]{0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // I
            {74, new byte[]{0x00, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0x18, 0x00, 0x00}}, // J
            {75, new byte[]{0x00, 0xC0, 0x30, 0x8C, 0xC0, 0x0C, 0x6C, 0xC0, 0x02, 0x3C, 0xC0, 0x02, 0x4C, 0xC0, 0x08, 0x0C, 0xC1, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // K
            {76, new byte[]{0x00, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x01, 0x18, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // L
            {77, new byte[]{0x00, 0xC0, 0x30, 0x0C, 0xC3, 0x30, 0x0C, 0xC2, 0x20, 0x2C, 0xC2, 0x22, 0x6C, 0xC2, 0x20, 0x0C, 0xC2, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // M
            {78, new byte[]{0x00, 0xE0, 0x20, 0x0E, 0x62, 0x21, 0x16, 0x62, 0x22, 0x66, 0x62, 0x24, 0x86, 0x62, 0x28, 0x06, 0x63, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // N
            {79, new byte[]{0x00, 0x80, 0x1F, 0x04, 0x63, 0x20, 0x02, 0x22, 0x60, 0x02, 0x26, 0x20, 0x02, 0x42, 0x20, 0x04, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // O
            {80, new byte[]{0x00, 0xC0, 0x0F, 0x0C, 0xC1, 0x10, 0x0C, 0xC1, 0x10, 0x8C, 0xC1, 0x0F, 0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // P
            {81, new byte[]{0x00, 0x80, 0x1F, 0x04, 0x63, 0x20, 0x02, 0x22, 0x60, 0x02, 0x26, 0x20, 0x02, 0x42, 0x20, 0x04, 0x83, 0x1F, 0x40, 0x00, 0x18, 0x00, 0x00, 0x00}}, // Q
            {82, new byte[]{0x00, 0xC0, 0x0F, 0x0C, 0xC1, 0x10, 0x0C, 0xC1, 0x10, 0xFC, 0xC0, 0x04, 0x8C, 0xC0, 0x08, 0x0C, 0xC1, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // R
            {83, new byte[]{0x00, 0x00, 0x1F, 0x08, 0x80, 0x00, 0x08, 0x00, 0x03, 0xC0, 0x01, 0x30, 0x00, 0x02, 0x20, 0x00, 0x83, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // S
            {84, new byte[]{0x00, 0xC0, 0x3F, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // T
            {85, new byte[]{0x00, 0x40, 0x20, 0x04, 0x42, 0x20, 0x04, 0x42, 0x20, 0x04, 0x42, 0x20, 0x04, 0xC2, 0x20, 0x08, 0x02, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // U
            {86, new byte[]{0x00, 0x60, 0x20, 0x04, 0x41, 0x10, 0x04, 0x81, 0x08, 0x88, 0x80, 0x08, 0x50, 0x00, 0x05, 0x50, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // V
            {87, new byte[]{0x00, 0x20, 0x40, 0x62, 0x04, 0x06, 0x60, 0x40, 0x20, 0x04, 0x42, 0x20, 0x04, 0xC2, 0x20, 0x08, 0x81, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // W
            {88, new byte[]{0x00, 0x40, 0x30, 0x08, 0x81, 0x08, 0x90, 0x00, 0x07, 0x60, 0x00, 0x05, 0x90, 0x80, 0x18, 0x04, 0x61, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // X
            {89, new byte[]{0x00, 0xC0, 0x60, 0x08, 0x02, 0x11, 0x10, 0x01, 0x0A, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // Y
            {90, new byte[]{0x00, 0xC0, 0x3F, 0x00, 0x01, 0x18, 0x80, 0x00, 0x04, 0x20, 0x00, 0x03, 0x10, 0x80, 0x00, 0x04, 0xC0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // Z
            {91, new byte[]{0xE0, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0xE0, 0x00, 0x00}}, // [
            {92, new byte[]{0x08, 0x80, 0x00, 0x10, 0x00, 0x01, 0x20, 0x00, 0x02, 0x40, 0x00, 0x04, 0x40, 0x00, 0x08, 0x80, 0x00, 0x10, 0x00, 0x01, 0x20, 0x00, 0x00, 0x00}}, // \
            {93, new byte[]{0xE0, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0xE0, 0x00, 0x00}}, // ]
            {94, new byte[]{0x00, 0x00, 0x06, 0xA0, 0x00, 0x0A, 0x10, 0x01, 0x11, 0x08, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // ^
            {95, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x03, 0x00}}, // _
            {96, new byte[]{0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // `
            {97, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x01, 0x10, 0x00, 0x81, 0x1F, 0x04, 0x41, 0x10, 0x84, 0x81, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // a
            {98, new byte[]{0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x0E, 0x1C, 0xC1, 0x20, 0x0C, 0x42, 0x20, 0x04, 0xC2, 0x20, 0x0C, 0x41, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // b
            {99, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x10, 0x80, 0x00, 0x08, 0x80, 0x00, 0x08, 0x80, 0x00, 0x18, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // c
            {100, new byte[]{0x00, 0x01, 0x10, 0x00, 0x01, 0x17, 0x88, 0x41, 0x10, 0x04, 0x41, 0x10, 0x04, 0x41, 0x10, 0x0C, 0x81, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // d
            {101, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x88, 0x41, 0x10, 0x04, 0xC1, 0x1F, 0x04, 0x40, 0x00, 0x0C, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // e
            {102, new byte[]{0xE0, 0x00, 0x02, 0x20, 0x80, 0x0F, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // f
            {103, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x88, 0x41, 0x10, 0x04, 0x41, 0x10, 0x04, 0x41, 0x10, 0x0C, 0x81, 0x1F, 0x00, 0x01, 0x10, 0xF8, 0x00, 0x00}}, // g
            {104, new byte[]{0x0C, 0xC0, 0x00, 0x0C, 0xC0, 0x0E, 0x1C, 0xC1, 0x10, 0x0C, 0xC1, 0x10, 0x0C, 0xC1, 0x10, 0x0C, 0xC1, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // h
            {105, new byte[]{0x60, 0x00, 0x02, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // i
            {106, new byte[]{0x60, 0x00, 0x02, 0x00, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x02, 0x38, 0x00, 0x00}}, // j
            {107, new byte[]{0x18, 0x80, 0x01, 0x18, 0x80, 0x31, 0x98, 0x81, 0x0D, 0x78, 0x80, 0x03, 0x58, 0x80, 0x0D, 0x98, 0x81, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // k
            {108, new byte[]{0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x06, 0x60, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // l
            {109, new byte[]{0x00, 0x00, 0x00, 0x00, 0xC0, 0x33, 0x24, 0x40, 0x04, 0x44, 0x40, 0x04, 0x44, 0x40, 0x04, 0x44, 0x40, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // m
            {110, new byte[]{0x00, 0x00, 0x00, 0x00, 0xC0, 0x0E, 0x1C, 0xC1, 0x10, 0x0C, 0xC1, 0x10, 0x0C, 0xC1, 0x10, 0x0C, 0xC1, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // n
            {111, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x08, 0x41, 0x10, 0x04, 0x42, 0x20, 0x04, 0x42, 0x10, 0x0C, 0x81, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // o
            {112, new byte[]{0x00, 0x00, 0x00, 0x00, 0xC0, 0x0E, 0x1C, 0xC1, 0x20, 0x0C, 0x42, 0x20, 0x04, 0xC2, 0x20, 0x0C, 0xC1, 0x1F, 0x0C, 0xC0, 0x00, 0x0C, 0x00, 0x00}}, // p
            {113, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x88, 0x41, 0x10, 0x04, 0x41, 0x10, 0x04, 0x41, 0x10, 0x0C, 0x81, 0x1F, 0x00, 0x01, 0x10, 0x00, 0x01, 0x00}}, // q
            {114, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x70, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // r
            {115, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x08, 0x80, 0x00, 0x08, 0x00, 0x07, 0x80, 0x00, 0x10, 0x80, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // s
            {116, new byte[]{0x00, 0x00, 0x03, 0x30, 0x80, 0x0F, 0x30, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x02, 0x20, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // t
            {117, new byte[]{0x00, 0x00, 0x00, 0x00, 0x40, 0x10, 0x04, 0x41, 0x10, 0x04, 0x41, 0x10, 0x04, 0x41, 0x10, 0x88, 0x81, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // u
            {118, new byte[]{0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x08, 0x81, 0x10, 0x08, 0x01, 0x09, 0x90, 0x00, 0x09, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // v
            {119, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x64, 0x44, 0x02, 0x24, 0x40, 0x20, 0x08, 0x82, 0x20, 0x08, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // w
            {120, new byte[]{0x00, 0x00, 0x00, 0x00, 0xC0, 0x10, 0x08, 0x01, 0x09, 0x50, 0x00, 0x06, 0x60, 0x00, 0x09, 0x88, 0xC0, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // x
            {121, new byte[]{0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x08, 0x81, 0x10, 0x08, 0x01, 0x09, 0x90, 0x00, 0x0A, 0x60, 0x00, 0x06, 0x20, 0x00, 0x02, 0x18, 0x00, 0x00}}, // y
            {122, new byte[]{0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0x00, 0x01, 0x08, 0x40, 0x00, 0x02, 0x20, 0x00, 0x01, 0x08, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // z
            {123, new byte[]{0xC0, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x02, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0xC0, 0x00, 0x00}}, // {
            {124, new byte[]{0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x00}}, // |
            {125, new byte[]{0x20, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x08, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x40, 0x00, 0x04, 0x20, 0x00, 0x00}}, // }
            {126, new byte[]{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xC2, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // ~
        };

        public override byte Width { get => 12; }
        public override byte Height { get => 16; }
        public override byte[] this[char character]
        {
            get
            {
                int charCode = (int)character;
                if (_fontTable.Contains(charCode))
                {
                    return (byte[])_fontTable[charCode];
                }
                else
                {
                    return (byte[])_fontTable[32];
                }
            }
        }
    }
}
